{"pageProps":{"doc":{"title":"useColorModeValue","body":{"raw":"\n# useColorModeValue\n\n`useColorModeValue` is a React hook used to change any value or style based on the color mode. It takes 2 arguments: the value in light mode, and the value in dark mode.\n\n## Import\n\n```jsx live=false\nimport { useColorModeValue } from '@totejs/uikit';\n```\n\n## Usage\n\n```jsx live=false\n// Here's the signature\nconst value = useColorModeValue(lightModeValue, darkModeValue);\n```\n\n```jsx\nfunction StyleColorMode() {\n  const { toggleColorMode } = useColorMode();\n\n  const bg = useColorModeValue('scene.danger.normal', 'scene.success.normal');\n  const color = useColorModeValue('white', 'red');\n\n  return (\n    <>\n      <Box mb={16} bg={bg} color={color}>\n        This box's style will change based on the color mode.\n      </Box>\n      <Button onClick={toggleColorMode}>Toggle Mode</Button>\n    </>\n  );\n}\n```\n\n## Arguments\n\n<PropsTable\n  data={[\n    {\n      name: 'light',\n      required: false,\n      type: 'unknow',\n      default: '',\n      desc: 'The value used for light color mode',\n    },\n    {\n      name: 'dark',\n      required: false,\n      type: 'unknow',\n      default: '',\n      desc: 'The value used for dark color mode',\n    },\n  ]}\n/>\n","code":"var Component=(()=>{var i=Object.create;var l=Object.defineProperty;var h=Object.getOwnPropertyDescriptor;var g=Object.getOwnPropertyNames;var m=Object.getPrototypeOf,p=Object.prototype.hasOwnProperty;var f=(o,e)=>()=>(e||o((e={exports:{}}).exports,e),e.exports),M=(o,e)=>{for(var r in e)l(o,r,{get:e[r],enumerable:!0})},a=(o,e,r,s)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let t of g(e))!p.call(o,t)&&t!==r&&l(o,t,{get:()=>e[t],enumerable:!(s=h(e,t))||s.enumerable});return o};var x=(o,e,r)=>(r=o!=null?i(m(o)):{},a(e||!o||!o.__esModule?l(r,\"default\",{value:o,enumerable:!0}):r,o)),C=o=>a(l({},\"__esModule\",{value:!0}),o);var c=f((_,d)=>{d.exports=_jsx_runtime});var y={};M(y,{default:()=>k,frontmatter:()=>b});var n=x(c()),b={title:\"useColorModeValue\"};function u(o){let e=Object.assign({h1:\"h1\",p:\"p\",code:\"code\",h2:\"h2\",pre:\"pre\"},o.components),{PropsTable:r}=e;return r||v(\"PropsTable\",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.h1,{children:\"useColorModeValue\"}),`\n`,(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.code,{children:\"useColorModeValue\"}),\" is a React hook used to change any value or style based on the color mode. It takes 2 arguments: the value in light mode, and the value in dark mode.\"]}),`\n`,(0,n.jsx)(e.h2,{children:\"Import\"}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-jsx\",live:\"false\",children:`import { useColorModeValue } from '@totejs/uikit';\n`})}),`\n`,(0,n.jsx)(e.h2,{children:\"Usage\"}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-jsx\",live:\"false\",children:`// Here's the signature\nconst value = useColorModeValue(lightModeValue, darkModeValue);\n`})}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-jsx\",children:`function StyleColorMode() {\n  const { toggleColorMode } = useColorMode();\n\n  const bg = useColorModeValue('scene.danger.normal', 'scene.success.normal');\n  const color = useColorModeValue('white', 'red');\n\n  return (\n    <>\n      <Box mb={16} bg={bg} color={color}>\n        This box's style will change based on the color mode.\n      </Box>\n      <Button onClick={toggleColorMode}>Toggle Mode</Button>\n    </>\n  );\n}\n`})}),`\n`,(0,n.jsx)(e.h2,{children:\"Arguments\"}),`\n`,(0,n.jsx)(r,{data:[{name:\"light\",required:!1,type:\"unknow\",default:\"\",desc:\"The value used for light color mode\"},{name:\"dark\",required:!1,type:\"unknow\",default:\"\",desc:\"The value used for dark color mode\"}]})]})}function j(o={}){let{wrapper:e}=o.components||{};return e?(0,n.jsx)(e,Object.assign({},o,{children:(0,n.jsx)(u,o)})):u(o)}var k=j;function v(o,e){throw new Error(\"Expected \"+(e?\"component\":\"object\")+\" `\"+o+\"` to be defined: you likely forgot to import, pass, or provide it.\")}return C(y);})();\n;return Component;"},"_id":"docs/hooks/useColorModeValue.mdx","_raw":{"sourceFilePath":"docs/hooks/useColorModeValue.mdx","sourceFileName":"useColorModeValue.mdx","sourceFileDir":"docs/hooks","contentType":"mdx","flattenedPath":"docs/hooks/useColorModeValue"},"type":"Doc","slug":"/docs/hooks/useColorModeValue"}},"__N_SSG":true}