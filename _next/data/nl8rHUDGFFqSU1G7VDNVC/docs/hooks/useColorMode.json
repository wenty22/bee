{"pageProps":{"doc":{"title":"useColorMode","body":{"raw":"\n# useColorMode\n\n`useColorMode` is a React hook that gives you access to the current color mode, and a function to toggle the color mode.\n\n## Import\n\n```jsx live=false\nimport { useColorMode } from '@totejs/uikit';\n```\n\n## Usage\n\n```jsx\nfunction Example() {\n  const { colorMode, toggleColorMode } = useColorMode();\n  return (\n    <header>\n      <Button onClick={toggleColorMode}>\n        Toggle {colorMode === 'light' ? 'Dark' : 'Light'}\n      </Button>\n    </header>\n  );\n}\n```\n\n## Return value\n\n<PropsTable\n  data={[\n    {\n      name: 'color mode object',\n      type: 'Object{ colorMode: \"light\" | \"dark\", toggleColorMode: (e: Event) => void }',\n      default: '',\n      desc: '',\n    },\n  ]}\n/>\n","code":"var Component=(()=>{var h=Object.create;var c=Object.defineProperty;var u=Object.getOwnPropertyDescriptor;var g=Object.getOwnPropertyNames;var m=Object.getPrototypeOf,p=Object.prototype.hasOwnProperty;var f=(o,e)=>()=>(e||o((e={exports:{}}).exports,e),e.exports),M=(o,e)=>{for(var t in e)c(o,t,{get:e[t],enumerable:!0})},d=(o,e,t,l)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let r of g(e))!p.call(o,r)&&r!==t&&c(o,r,{get:()=>e[r],enumerable:!(l=u(e,r))||l.enumerable});return o};var x=(o,e,t)=>(t=o!=null?h(m(o)):{},d(e||!o||!o.__esModule?c(t,\"default\",{value:o,enumerable:!0}):t,o)),j=o=>d(c({},\"__esModule\",{value:!0}),o);var a=f((E,s)=>{s.exports=_jsx_runtime});var v={};M(v,{default:()=>_,frontmatter:()=>C});var n=x(a()),C={title:\"useColorMode\"};function i(o){let e=Object.assign({h1:\"h1\",p:\"p\",code:\"code\",h2:\"h2\",pre:\"pre\"},o.components),{PropsTable:t}=e;return t||k(\"PropsTable\",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.h1,{children:\"useColorMode\"}),`\n`,(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.code,{children:\"useColorMode\"}),\" is a React hook that gives you access to the current color mode, and a function to toggle the color mode.\"]}),`\n`,(0,n.jsx)(e.h2,{children:\"Import\"}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-jsx\",live:\"false\",children:`import { useColorMode } from '@totejs/uikit';\n`})}),`\n`,(0,n.jsx)(e.h2,{children:\"Usage\"}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-jsx\",children:`function Example() {\n  const { colorMode, toggleColorMode } = useColorMode();\n  return (\n    <header>\n      <Button onClick={toggleColorMode}>\n        Toggle {colorMode === 'light' ? 'Dark' : 'Light'}\n      </Button>\n    </header>\n  );\n}\n`})}),`\n`,(0,n.jsx)(e.h2,{children:\"Return value\"}),`\n`,(0,n.jsx)(t,{data:[{name:\"color mode object\",type:'Object{ colorMode: \"light\" | \"dark\", toggleColorMode: (e: Event) => void }',default:\"\",desc:\"\"}]})]})}function b(o={}){let{wrapper:e}=o.components||{};return e?(0,n.jsx)(e,Object.assign({},o,{children:(0,n.jsx)(i,o)})):i(o)}var _=b;function k(o,e){throw new Error(\"Expected \"+(e?\"component\":\"object\")+\" `\"+o+\"` to be defined: you likely forgot to import, pass, or provide it.\")}return j(v);})();\n;return Component;"},"_id":"docs/hooks/useColorMode.mdx","_raw":{"sourceFilePath":"docs/hooks/useColorMode.mdx","sourceFileName":"useColorMode.mdx","sourceFileDir":"docs/hooks","contentType":"mdx","flattenedPath":"docs/hooks/useColorMode"},"type":"Doc","slug":"/docs/hooks/useColorMode"}},"__N_SSG":true}