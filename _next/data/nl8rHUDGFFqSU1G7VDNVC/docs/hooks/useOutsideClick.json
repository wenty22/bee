{"pageProps":{"doc":{"title":"useOutsideClick","body":{"raw":"\n# useOutsideClick\n\n`useOutsideClick` is a custom hook that handles click events outside a specific DOM element, like a `div`. A handler is invoked when a click or touch event happens outside the referenced element.\n\n## Import\n\n```jsx live=false\nimport { useOutsideClick } from '@totejs/uikit';\n```\n\n## Usage\n\n```jsx\nfunction Example() {\n  const ref = React.useRef();\n  const [isModalOpen, setIsModalOpen] = React.useState(false);\n\n  useOutsideClick({\n    ref: ref,\n    handler: () => setIsModalOpen(false),\n  });\n\n  return (\n    <>\n      {isModalOpen ? (\n        <div ref={ref}>\n          ðŸ‘‹ Hey, I'm a modal. Click anywhere outside of me to close.\n        </div>\n      ) : (\n        <button onClick={() => setIsModalOpen(true)}>Open Modal</button>\n      )}\n    </>\n  );\n}\n```\n\n## Arguments\n\n<PropsTable\n  data={[\n    {\n      name: 'ref',\n      required: true,\n      type: 'RefObject<HTMLElement>',\n      default: '',\n      desc: 'The reference to a DOM element.',\n    },\n    {\n      name: 'enabled',\n      required: false,\n      type: 'boolean',\n      default: true,\n      desc: 'Whether the hook is enabled',\n    },\n    {\n      name: 'handler',\n      required: false,\n      type: '(e: Event) => void',\n      default: '',\n      desc: 'Function invoked when a click is triggered outside the referenced element.',\n    },\n  ]}\n/>\n","code":"var Component=(()=>{var u=Object.create;var s=Object.defineProperty;var h=Object.getOwnPropertyDescriptor;var f=Object.getOwnPropertyNames;var p=Object.getPrototypeOf,m=Object.prototype.hasOwnProperty;var k=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports),O=(n,e)=>{for(var r in e)s(n,r,{get:e[r],enumerable:!0})},c=(n,e,r,i)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let o of f(e))!m.call(n,o)&&o!==r&&s(n,o,{get:()=>e[o],enumerable:!(i=h(e,o))||i.enumerable});return n};var g=(n,e,r)=>(r=n!=null?u(p(n)):{},c(e||!n||!n.__esModule?s(r,\"default\",{value:n,enumerable:!0}):r,n)),x=n=>c(s({},\"__esModule\",{value:!0}),n);var a=k((_,d)=>{d.exports=_jsx_runtime});var C={};O(C,{default:()=>j,frontmatter:()=>M});var t=g(a()),M={title:\"useOutsideClick\"};function l(n){let e=Object.assign({h1:\"h1\",p:\"p\",code:\"code\",h2:\"h2\",pre:\"pre\"},n.components),{PropsTable:r}=e;return r||v(\"PropsTable\",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h1,{children:\"useOutsideClick\"}),`\n`,(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.code,{children:\"useOutsideClick\"}),\" is a custom hook that handles click events outside a specific DOM element, like a \",(0,t.jsx)(e.code,{children:\"div\"}),\". A handler is invoked when a click or touch event happens outside the referenced element.\"]}),`\n`,(0,t.jsx)(e.h2,{children:\"Import\"}),`\n`,(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:\"language-jsx\",live:\"false\",children:`import { useOutsideClick } from '@totejs/uikit';\n`})}),`\n`,(0,t.jsx)(e.h2,{children:\"Usage\"}),`\n`,(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:\"language-jsx\",children:`function Example() {\n  const ref = React.useRef();\n  const [isModalOpen, setIsModalOpen] = React.useState(false);\n\n  useOutsideClick({\n    ref: ref,\n    handler: () => setIsModalOpen(false),\n  });\n\n  return (\n    <>\n      {isModalOpen ? (\n        <div ref={ref}>\n          \\u{1F44B} Hey, I'm a modal. Click anywhere outside of me to close.\n        </div>\n      ) : (\n        <button onClick={() => setIsModalOpen(true)}>Open Modal</button>\n      )}\n    </>\n  );\n}\n`})}),`\n`,(0,t.jsx)(e.h2,{children:\"Arguments\"}),`\n`,(0,t.jsx)(r,{data:[{name:\"ref\",required:!0,type:\"RefObject<HTMLElement>\",default:\"\",desc:\"The reference to a DOM element.\"},{name:\"enabled\",required:!1,type:\"boolean\",default:!0,desc:\"Whether the hook is enabled\"},{name:\"handler\",required:!1,type:\"(e: Event) => void\",default:\"\",desc:\"Function invoked when a click is triggered outside the referenced element.\"}]})]})}function b(n={}){let{wrapper:e}=n.components||{};return e?(0,t.jsx)(e,Object.assign({},n,{children:(0,t.jsx)(l,n)})):l(n)}var j=b;function v(n,e){throw new Error(\"Expected \"+(e?\"component\":\"object\")+\" `\"+n+\"` to be defined: you likely forgot to import, pass, or provide it.\")}return x(C);})();\n;return Component;"},"_id":"docs/hooks/useOutsideClick.mdx","_raw":{"sourceFilePath":"docs/hooks/useOutsideClick.mdx","sourceFileName":"useOutsideClick.mdx","sourceFileDir":"docs/hooks","contentType":"mdx","flattenedPath":"docs/hooks/useOutsideClick"},"type":"Doc","slug":"/docs/hooks/useOutsideClick"}},"__N_SSG":true}