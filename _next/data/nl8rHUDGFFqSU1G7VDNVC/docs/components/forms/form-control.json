{"pageProps":{"doc":{"title":"FormControl","body":{"raw":"\n# FormControl\n\n## Import\n\n```jsx live=false\nimport {\n  FormControl,\n  FormLabel,\n  FormErrorMessage,\n  FormHelperText,\n} from '@totejs/uikit';\n```\n\n## Usage\n\n```jsx\n<FormControl>\n  <FormLabel htmlFor=\"email\">Email address</FormLabel>\n  <Input name=\"email\" size=\"md\" placeholder=\"Please enter your email\" />\n  <FormHelperText>We'll never share your email.</FormHelperText>\n</FormControl>\n```\n\n## Status\n\n### isRequired\n\n```jsx\n<FormControl isRequired>\n  <FormLabel htmlFor=\"email\">Email address</FormLabel>\n  <Input name=\"email\" size=\"md\" />\n  <FormHelperText>We'll never share your email.</FormHelperText>\n  <FormErrorMessage>\n    Email is required. <SunIcon></SunIcon>\n  </FormErrorMessage>\n</FormControl>\n```\n\n### isDisabled\n\n```jsx\n<FormControl isDisabled>\n  <FormLabel htmlFor=\"email\">Email address</FormLabel>\n  <Input name=\"email\" size=\"md\" />\n  <FormHelperText>We'll never share your email.</FormHelperText>\n  <FormErrorMessage>\n    Email is required. <SunIcon></SunIcon>\n  </FormErrorMessage>\n</FormControl>\n```\n\n### isInvalid\n\n```jsx\n<FormControl isInvalid>\n  <FormLabel htmlFor=\"email\">Email address</FormLabel>\n  <Input name=\"email\" size=\"md\" />\n  <FormHelperText>We'll never share your email.</FormHelperText>\n  <FormErrorMessage>Email is required.</FormErrorMessage>\n</FormControl>\n```\n\n### isReadOnly\n\n```jsx\n<FormControl isReadOnly>\n  <FormLabel htmlFor=\"email\">Email address</FormLabel>\n  <Input name=\"email\" size=\"md\" />\n  <FormHelperText>We'll never share your email.</FormHelperText>\n  <FormErrorMessage>\n    Email is required. <SunIcon></SunIcon>\n  </FormErrorMessage>\n</FormControl>\n```\n\n## Props\n\n<PropsTable\n  data={[\n    {\n      name: 'isDisabled',\n      required: false,\n      type: 'boolean',\n      default: false,\n      desc: 'If true, the form control will be disabled. This has 2 side effects: - The FormLabel will have `data-disabled` attribute - The form element (e.g, Input) will be disabled',\n    },\n    {\n      name: 'isInvalid',\n      required: false,\n      type: 'boolean',\n      default: false,\n      desc: 'If true, the form control will be invalid. This has 2 side effects: - The FormLabel and FormErrorIcon will have `data-invalid` set to true - The form element (e.g, Input) will have `aria-invalid` set to true',\n    },\n    {\n      name: 'isReadOnly',\n      required: false,\n      type: 'boolean',\n      default: false,\n      desc: 'If true, the form control will be readonly',\n    },\n    {\n      name: 'isRequired',\n      required: false,\n      type: 'boolean',\n      default: false,\n      desc: 'If true, the form control will be required. This has 2 side effects: - The FormLabel will show a required indicator - The form element (e.g, Input) will have `aria-required` set to true',\n    },\n  ]}\n/>\n","code":"var Component=(()=>{var c=Object.create;var a=Object.defineProperty;var h=Object.getOwnPropertyDescriptor;var u=Object.getOwnPropertyNames;var F=Object.getPrototypeOf,p=Object.prototype.hasOwnProperty;var f=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports),b=(n,e)=>{for(var l in e)a(n,l,{get:e[l],enumerable:!0})},s=(n,e,l,i)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let o of u(e))!p.call(n,o)&&o!==l&&a(n,o,{get:()=>e[o],enumerable:!(i=h(e,o))||i.enumerable});return n};var g=(n,e,l)=>(l=n!=null?c(F(n)):{},s(e||!n||!n.__esModule?a(l,\"default\",{value:n,enumerable:!0}):l,n)),x=n=>s(a({},\"__esModule\",{value:!0}),n);var m=f((C,t)=>{t.exports=_jsx_runtime});var y={};b(y,{default:()=>E,frontmatter:()=>I});var r=g(m()),I={title:\"FormControl\"};function d(n){let e=Object.assign({h1:\"h1\",h2:\"h2\",pre:\"pre\",code:\"code\",h3:\"h3\"},n.components),{PropsTable:l}=e;return l||v(\"PropsTable\",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.h1,{children:\"FormControl\"}),`\n`,(0,r.jsx)(e.h2,{children:\"Import\"}),`\n`,(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:\"language-jsx\",live:\"false\",children:`import {\n  FormControl,\n  FormLabel,\n  FormErrorMessage,\n  FormHelperText,\n} from '@totejs/uikit';\n`})}),`\n`,(0,r.jsx)(e.h2,{children:\"Usage\"}),`\n`,(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:\"language-jsx\",children:`<FormControl>\n  <FormLabel htmlFor=\"email\">Email address</FormLabel>\n  <Input name=\"email\" size=\"md\" placeholder=\"Please enter your email\" />\n  <FormHelperText>We'll never share your email.</FormHelperText>\n</FormControl>\n`})}),`\n`,(0,r.jsx)(e.h2,{children:\"Status\"}),`\n`,(0,r.jsx)(e.h3,{children:\"isRequired\"}),`\n`,(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:\"language-jsx\",children:`<FormControl isRequired>\n  <FormLabel htmlFor=\"email\">Email address</FormLabel>\n  <Input name=\"email\" size=\"md\" />\n  <FormHelperText>We'll never share your email.</FormHelperText>\n  <FormErrorMessage>\n    Email is required. <SunIcon></SunIcon>\n  </FormErrorMessage>\n</FormControl>\n`})}),`\n`,(0,r.jsx)(e.h3,{children:\"isDisabled\"}),`\n`,(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:\"language-jsx\",children:`<FormControl isDisabled>\n  <FormLabel htmlFor=\"email\">Email address</FormLabel>\n  <Input name=\"email\" size=\"md\" />\n  <FormHelperText>We'll never share your email.</FormHelperText>\n  <FormErrorMessage>\n    Email is required. <SunIcon></SunIcon>\n  </FormErrorMessage>\n</FormControl>\n`})}),`\n`,(0,r.jsx)(e.h3,{children:\"isInvalid\"}),`\n`,(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:\"language-jsx\",children:`<FormControl isInvalid>\n  <FormLabel htmlFor=\"email\">Email address</FormLabel>\n  <Input name=\"email\" size=\"md\" />\n  <FormHelperText>We'll never share your email.</FormHelperText>\n  <FormErrorMessage>Email is required.</FormErrorMessage>\n</FormControl>\n`})}),`\n`,(0,r.jsx)(e.h3,{children:\"isReadOnly\"}),`\n`,(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:\"language-jsx\",children:`<FormControl isReadOnly>\n  <FormLabel htmlFor=\"email\">Email address</FormLabel>\n  <Input name=\"email\" size=\"md\" />\n  <FormHelperText>We'll never share your email.</FormHelperText>\n  <FormErrorMessage>\n    Email is required. <SunIcon></SunIcon>\n  </FormErrorMessage>\n</FormControl>\n`})}),`\n`,(0,r.jsx)(e.h2,{children:\"Props\"}),`\n`,(0,r.jsx)(l,{data:[{name:\"isDisabled\",required:!1,type:\"boolean\",default:!1,desc:\"If true, the form control will be disabled. This has 2 side effects: - The FormLabel will have `data-disabled` attribute - The form element (e.g, Input) will be disabled\"},{name:\"isInvalid\",required:!1,type:\"boolean\",default:!1,desc:\"If true, the form control will be invalid. This has 2 side effects: - The FormLabel and FormErrorIcon will have `data-invalid` set to true - The form element (e.g, Input) will have `aria-invalid` set to true\"},{name:\"isReadOnly\",required:!1,type:\"boolean\",default:!1,desc:\"If true, the form control will be readonly\"},{name:\"isRequired\",required:!1,type:\"boolean\",default:!1,desc:\"If true, the form control will be required. This has 2 side effects: - The FormLabel will show a required indicator - The form element (e.g, Input) will have `aria-required` set to true\"}]})]})}function T(n={}){let{wrapper:e}=n.components||{};return e?(0,r.jsx)(e,Object.assign({},n,{children:(0,r.jsx)(d,n)})):d(n)}var E=T;function v(n,e){throw new Error(\"Expected \"+(e?\"component\":\"object\")+\" `\"+n+\"` to be defined: you likely forgot to import, pass, or provide it.\")}return x(y);})();\n;return Component;"},"_id":"docs/components/forms/form-control.mdx","_raw":{"sourceFilePath":"docs/components/forms/form-control.mdx","sourceFileName":"form-control.mdx","sourceFileDir":"docs/components/forms","contentType":"mdx","flattenedPath":"docs/components/forms/form-control"},"type":"Doc","slug":"/docs/components/forms/form-control"}},"__N_SSG":true}