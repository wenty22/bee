{"pageProps":{"doc":{"title":"ButtonGroup","body":{"raw":"\n# ButtonGroup\n\nYou can use the `Stack` or `ButtonGroup` component to group buttons. When you use the `ButtonGroup`\ncomponent, it allows you to:\n\n- Set the `size` and `variant` of all buttons within it.\n- Add `spacing` between the buttons.\n- Flush the buttons together by removing the border radius of their children as needed.\n\n## Import\n\n```jsx live=false\nimport { ButtonGroup } from '@totejs/uikit';\n```\n\n## Usage\n\n```jsx\n<ButtonGroup size=\"md\" variant=\"second\">\n  <Button colorScheme=\"warning\">Test Button</Button>\n  <IconButton icon={<SunIcon />}></IconButton>\n</ButtonGroup>\n```\n\n## isAttached\n\n```jsx\n<ButtonGroup size=\"md\" variant=\"scene\" isAttached>\n  <Button colorScheme=\"warning\">Test Button</Button>\n  <IconButton icon={<SunIcon />}></IconButton>\n</ButtonGroup>\n```\n\n## Props\n\n<PropsTable\n  data={[\n    {\n      name: 'colorShceme',\n      required: false,\n      type: 'success | danger | warning | primary',\n      default: 'primary',\n      desc: 'When `variant=\"scene\"`, you can change the skin of the button',\n    },\n    {\n      name: 'size',\n      required: false,\n      type: 'sm | md | lg',\n      default: 'lg',\n      desc: '',\n    },\n    {\n      name: 'variant',\n      required: false,\n      type: 'scene | brand | second | ghost | text | link',\n      default: 'scene',\n      desc: '',\n    },\n    {\n      name: 'isDisabled',\n      required: false,\n      type: 'boolean',\n      default: false,\n      desc: 'If true, the button will be disabled.',\n    },\n    {\n      name: 'isAttached',\n      required: false,\n      type: 'boolean',\n      default: false,\n      desc: 'If true, the borderRadius of button that are direct children will be altered to look flushed together',\n    },\n    {\n      name: 'spacing',\n      required: false,\n      type: 'number | string',\n      default: false,\n      desc: 'The spacing between the buttons',\n    },\n  ]}\n/>\n","code":"var Component=(()=>{var u=Object.create;var c=Object.defineProperty;var h=Object.getOwnPropertyDescriptor;var p=Object.getOwnPropertyNames;var m=Object.getPrototypeOf,f=Object.prototype.hasOwnProperty;var g=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),b=(t,e)=>{for(var o in e)c(t,o,{get:e[o],enumerable:!0})},s=(t,e,o,i)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let r of p(e))!f.call(t,r)&&r!==o&&c(t,r,{get:()=>e[r],enumerable:!(i=h(e,r))||i.enumerable});return t};var B=(t,e,o)=>(o=t!=null?u(m(t)):{},s(e||!t||!t.__esModule?c(o,\"default\",{value:t,enumerable:!0}):o,t)),x=t=>s(c({},\"__esModule\",{value:!0}),t);var d=g((_,a)=>{a.exports=_jsx_runtime});var I={};b(I,{default:()=>w,frontmatter:()=>y});var n=B(d()),y={title:\"ButtonGroup\"};function l(t){let e=Object.assign({h1:\"h1\",p:\"p\",code:\"code\",ul:\"ul\",li:\"li\",h2:\"h2\",pre:\"pre\"},t.components),{PropsTable:o}=e;return o||G(\"PropsTable\",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.h1,{children:\"ButtonGroup\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"You can use the \",(0,n.jsx)(e.code,{children:\"Stack\"}),\" or \",(0,n.jsx)(e.code,{children:\"ButtonGroup\"}),\" component to group buttons. When you use the \",(0,n.jsx)(e.code,{children:\"ButtonGroup\"}),`\ncomponent, it allows you to:`]}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[\"Set the \",(0,n.jsx)(e.code,{children:\"size\"}),\" and \",(0,n.jsx)(e.code,{children:\"variant\"}),\" of all buttons within it.\"]}),`\n`,(0,n.jsxs)(e.li,{children:[\"Add \",(0,n.jsx)(e.code,{children:\"spacing\"}),\" between the buttons.\"]}),`\n`,(0,n.jsx)(e.li,{children:\"Flush the buttons together by removing the border radius of their children as needed.\"}),`\n`]}),`\n`,(0,n.jsx)(e.h2,{children:\"Import\"}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-jsx\",live:\"false\",children:`import { ButtonGroup } from '@totejs/uikit';\n`})}),`\n`,(0,n.jsx)(e.h2,{children:\"Usage\"}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-jsx\",children:`<ButtonGroup size=\"md\" variant=\"second\">\n  <Button colorScheme=\"warning\">Test Button</Button>\n  <IconButton icon={<SunIcon />}></IconButton>\n</ButtonGroup>\n`})}),`\n`,(0,n.jsx)(e.h2,{children:\"isAttached\"}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-jsx\",children:`<ButtonGroup size=\"md\" variant=\"scene\" isAttached>\n  <Button colorScheme=\"warning\">Test Button</Button>\n  <IconButton icon={<SunIcon />}></IconButton>\n</ButtonGroup>\n`})}),`\n`,(0,n.jsx)(e.h2,{children:\"Props\"}),`\n`,(0,n.jsx)(o,{data:[{name:\"colorShceme\",required:!1,type:\"success | danger | warning | primary\",default:\"primary\",desc:'When `variant=\"scene\"`, you can change the skin of the button'},{name:\"size\",required:!1,type:\"sm | md | lg\",default:\"lg\",desc:\"\"},{name:\"variant\",required:!1,type:\"scene | brand | second | ghost | text | link\",default:\"scene\",desc:\"\"},{name:\"isDisabled\",required:!1,type:\"boolean\",default:!1,desc:\"If true, the button will be disabled.\"},{name:\"isAttached\",required:!1,type:\"boolean\",default:!1,desc:\"If true, the borderRadius of button that are direct children will be altered to look flushed together\"},{name:\"spacing\",required:!1,type:\"number | string\",default:!1,desc:\"The spacing between the buttons\"}]})]})}function j(t={}){let{wrapper:e}=t.components||{};return e?(0,n.jsx)(e,Object.assign({},t,{children:(0,n.jsx)(l,t)})):l(t)}var w=j;function G(t,e){throw new Error(\"Expected \"+(e?\"component\":\"object\")+\" `\"+t+\"` to be defined: you likely forgot to import, pass, or provide it.\")}return x(I);})();\n;return Component;"},"_id":"docs/components/forms/button-group.mdx","_raw":{"sourceFilePath":"docs/components/forms/button-group.mdx","sourceFileName":"button-group.mdx","sourceFileDir":"docs/components/forms","contentType":"mdx","flattenedPath":"docs/components/forms/button-group"},"type":"Doc","slug":"/docs/components/forms/button-group"}},"__N_SSG":true}