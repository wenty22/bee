{"pageProps":{"doc":{"title":"Icon Button","body":{"raw":"\n# Icon Button\n\n## Import\n\n```jsx live=false\nimport { IconButton } from '@totejs/uikit';\n```\n\n## Usage\n\n```jsx\n<IconButton icon={<ValidatorsIcon />} />\n```\n\n## Sizes\n\n```jsx\n<Wrap>\n  <IconButton icon={<ValidatorsIcon />} size=\"sm\" />\n  <IconButton icon={<ValidatorsIcon />} size=\"md\" />\n  <IconButton icon={<ValidatorsIcon />} size=\"lg\" />\n</Wrap>\n```\n\n## Variants\n\n```jsx\n<Wrap>\n  <IconButton icon={<ValidatorsIcon />} variant=\"scene\" />\n  <IconButton icon={<ValidatorsIcon />} variant=\"scene\" colorScheme=\"warning\" />\n  <IconButton icon={<ValidatorsIcon />} variant=\"brand\" bg=\"#00ACEE\" color=\"#FFF\" />\n  <IconButton icon={<ValidatorsIcon />} variant=\"second\" />\n  <IconButton icon={<ValidatorsIcon />} variant=\"ghost\" />\n  <IconButton icon={<ValidatorsIcon />} variant=\"text\" />\n  <IconButton icon={<ValidatorsIcon />} variant=\"link\" />\n</Wrap>\n```\n\n## Scene Colors\n\nOnly effect when `variant=\"scene\"`\n\n```jsx\n<Wrap>\n  <IconButton icon={<ValidatorsIcon />} variant=\"scene\" colorScheme=\"success\" />\n  <IconButton icon={<ValidatorsIcon />} variant=\"scene\" colorScheme=\"danger\" />\n  <IconButton icon={<ValidatorsIcon />} variant=\"scene\" colorScheme=\"warning\" />\n  <IconButton icon={<ValidatorsIcon />} variant=\"scene\" colorScheme=\"primary\" />\n</Wrap>\n```\n\n## Status\n\n### Disabled\n\n```jsx\n<Wrap>\n  <IconButton icon={<ValidatorsIcon />} variant=\"scene\" colorScheme=\"success\" isDisabled />\n  <IconButton icon={<ValidatorsIcon />} variant=\"scene\" colorScheme=\"danger\" isDisabled />\n  <IconButton icon={<ValidatorsIcon />} variant=\"scene\" colorScheme=\"warning\" isDisabled />\n  <IconButton icon={<ValidatorsIcon />} variant=\"scene\" colorScheme=\"primary\" isDisabled />\n\n  <IconButton icon={<ValidatorsIcon />} variant=\"brand\" isDisabled bg=\"#00ACEE\" color=\"#FFF\" />\n  <IconButton icon={<ValidatorsIcon />} variant=\"second\" isDisabled />\n  <IconButton icon={<ValidatorsIcon />} variant=\"ghost\" isDisabled />\n  <IconButton icon={<ValidatorsIcon />} variant=\"text\" isDisabled />\n  <IconButton icon={<ValidatorsIcon />} variant=\"link\" isDisabled />\n</Wrap>\n```\n\n## Props\n\n<PropsTable\n  data={[\n    {\n      name: 'colorShceme',\n      required: false,\n      type: '\"primary\" | \"success\" | \"danger\" | \"warning\"',\n      default: '\"primary\"',\n      desc: 'Scene colors, only effect when `variant=\"scene\"` ',\n    },\n    {\n      name: 'size',\n      required: false,\n      type: 'sm | md | lg',\n      default: 'lg',\n      desc: '',\n    },\n    {\n      name: 'isDisabled',\n      required: false,\n      type: 'boolean',\n      default: false,\n      desc: 'If true, the button will be disabled.',\n    },\n    {\n      name: 'icon',\n      required: false,\n      type: 'React.ReactElement',\n      default: '',\n    },\n    {\n      name: 'variant',\n      required: false,\n      type: 'scene | brand | second | ghost | text | link',\n      default: 'scene',\n      desc: '',\n    },\n    {\n      name: 'type',\n      required: false,\n      type: 'submit | reset | button',\n      default: '',\n      desc: '',\n    },\n  ]}\n/>\n","code":"var Component=(()=>{var u=Object.create;var t=Object.defineProperty;var h=Object.getOwnPropertyDescriptor;var I=Object.getOwnPropertyNames;var m=Object.getPrototypeOf,p=Object.prototype.hasOwnProperty;var g=(o,n)=>()=>(n||o((n={exports:{}}).exports,n),n.exports),f=(o,n)=>{for(var a in n)t(o,a,{get:n[a],enumerable:!0})},i=(o,n,a,r)=>{if(n&&typeof n==\"object\"||typeof n==\"function\")for(let c of I(n))!p.call(o,c)&&c!==a&&t(o,c,{get:()=>n[c],enumerable:!(r=h(n,c))||r.enumerable});return o};var b=(o,n,a)=>(a=o!=null?u(m(o)):{},i(n||!o||!o.__esModule?t(a,\"default\",{value:o,enumerable:!0}):a,o)),B=o=>i(t({},\"__esModule\",{value:!0}),o);var l=g((D,s)=>{s.exports=_jsx_runtime});var j={};f(j,{default:()=>x,frontmatter:()=>v});var e=b(l()),v={title:\"Icon Button\"};function d(o){let n=Object.assign({h1:\"h1\",h2:\"h2\",pre:\"pre\",code:\"code\",p:\"p\",h3:\"h3\"},o.components),{PropsTable:a}=n;return a||y(\"PropsTable\",!0),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(n.h1,{children:\"Icon Button\"}),`\n`,(0,e.jsx)(n.h2,{children:\"Import\"}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"language-jsx\",live:\"false\",children:`import { IconButton } from '@totejs/uikit';\n`})}),`\n`,(0,e.jsx)(n.h2,{children:\"Usage\"}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"language-jsx\",children:`<IconButton icon={<ValidatorsIcon />} />\n`})}),`\n`,(0,e.jsx)(n.h2,{children:\"Sizes\"}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"language-jsx\",children:`<Wrap>\n  <IconButton icon={<ValidatorsIcon />} size=\"sm\" />\n  <IconButton icon={<ValidatorsIcon />} size=\"md\" />\n  <IconButton icon={<ValidatorsIcon />} size=\"lg\" />\n</Wrap>\n`})}),`\n`,(0,e.jsx)(n.h2,{children:\"Variants\"}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"language-jsx\",children:`<Wrap>\n  <IconButton icon={<ValidatorsIcon />} variant=\"scene\" />\n  <IconButton icon={<ValidatorsIcon />} variant=\"scene\" colorScheme=\"warning\" />\n  <IconButton icon={<ValidatorsIcon />} variant=\"brand\" bg=\"#00ACEE\" color=\"#FFF\" />\n  <IconButton icon={<ValidatorsIcon />} variant=\"second\" />\n  <IconButton icon={<ValidatorsIcon />} variant=\"ghost\" />\n  <IconButton icon={<ValidatorsIcon />} variant=\"text\" />\n  <IconButton icon={<ValidatorsIcon />} variant=\"link\" />\n</Wrap>\n`})}),`\n`,(0,e.jsx)(n.h2,{children:\"Scene Colors\"}),`\n`,(0,e.jsxs)(n.p,{children:[\"Only effect when \",(0,e.jsx)(n.code,{children:'variant=\"scene\"'})]}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"language-jsx\",children:`<Wrap>\n  <IconButton icon={<ValidatorsIcon />} variant=\"scene\" colorScheme=\"success\" />\n  <IconButton icon={<ValidatorsIcon />} variant=\"scene\" colorScheme=\"danger\" />\n  <IconButton icon={<ValidatorsIcon />} variant=\"scene\" colorScheme=\"warning\" />\n  <IconButton icon={<ValidatorsIcon />} variant=\"scene\" colorScheme=\"primary\" />\n</Wrap>\n`})}),`\n`,(0,e.jsx)(n.h2,{children:\"Status\"}),`\n`,(0,e.jsx)(n.h3,{children:\"Disabled\"}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"language-jsx\",children:`<Wrap>\n  <IconButton icon={<ValidatorsIcon />} variant=\"scene\" colorScheme=\"success\" isDisabled />\n  <IconButton icon={<ValidatorsIcon />} variant=\"scene\" colorScheme=\"danger\" isDisabled />\n  <IconButton icon={<ValidatorsIcon />} variant=\"scene\" colorScheme=\"warning\" isDisabled />\n  <IconButton icon={<ValidatorsIcon />} variant=\"scene\" colorScheme=\"primary\" isDisabled />\n\n  <IconButton icon={<ValidatorsIcon />} variant=\"brand\" isDisabled bg=\"#00ACEE\" color=\"#FFF\" />\n  <IconButton icon={<ValidatorsIcon />} variant=\"second\" isDisabled />\n  <IconButton icon={<ValidatorsIcon />} variant=\"ghost\" isDisabled />\n  <IconButton icon={<ValidatorsIcon />} variant=\"text\" isDisabled />\n  <IconButton icon={<ValidatorsIcon />} variant=\"link\" isDisabled />\n</Wrap>\n`})}),`\n`,(0,e.jsx)(n.h2,{children:\"Props\"}),`\n`,(0,e.jsx)(a,{data:[{name:\"colorShceme\",required:!1,type:'\"primary\" | \"success\" | \"danger\" | \"warning\"',default:'\"primary\"',desc:'Scene colors, only effect when `variant=\"scene\"` '},{name:\"size\",required:!1,type:\"sm | md | lg\",default:\"lg\",desc:\"\"},{name:\"isDisabled\",required:!1,type:\"boolean\",default:!1,desc:\"If true, the button will be disabled.\"},{name:\"icon\",required:!1,type:\"React.ReactElement\",default:\"\"},{name:\"variant\",required:!1,type:\"scene | brand | second | ghost | text | link\",default:\"scene\",desc:\"\"},{name:\"type\",required:!1,type:\"submit | reset | button\",default:\"\",desc:\"\"}]})]})}function V(o={}){let{wrapper:n}=o.components||{};return n?(0,e.jsx)(n,Object.assign({},o,{children:(0,e.jsx)(d,o)})):d(o)}var x=V;function y(o,n){throw new Error(\"Expected \"+(n?\"component\":\"object\")+\" `\"+o+\"` to be defined: you likely forgot to import, pass, or provide it.\")}return B(j);})();\n;return Component;"},"_id":"docs/components/forms/icon-button.mdx","_raw":{"sourceFilePath":"docs/components/forms/icon-button.mdx","sourceFileName":"icon-button.mdx","sourceFileDir":"docs/components/forms","contentType":"mdx","flattenedPath":"docs/components/forms/icon-button"},"type":"Doc","slug":"/docs/components/forms/icon-button"}},"__N_SSG":true}