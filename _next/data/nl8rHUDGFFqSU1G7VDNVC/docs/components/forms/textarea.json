{"pageProps":{"doc":{"title":"Button","body":{"raw":"\n# Textarea\n\n## Import\n\n```jsx live=false\nimport { Textarea } from '@totejs/uikit';\n```\n\n## Usage\n\n```jsx\n<Textarea placeholder=\"Please enter...\" />\n```\n\n## Colors\n\n```jsx\nfunction Example() {\n  return (\n    <VStack>\n      {['primary', 'success', 'warning', 'danger'].map((item) => (\n        <Textarea colorScheme={item} placeholder={item} key={item} />\n      ))}\n    </VStack>\n  );\n}\n```\n\n## Variants\n\nSo far, we only have one variant, we will add more variants in the future.\n\n```jsx\n<Textarea variant=\"filled\" />\n```\n\n## Status\n\n### isReadOnly\n\n```jsx\n<Textarea defaultValue=\"some text...\" isReadOnly />\n```\n\n### isDisabled\n\n```jsx\n<Textarea defaultValue=\"some text...\" isDisabled />\n```\n\n### isInvalid\n\n```jsx\n<Textarea defaultValue=\"some text...\" isInvalid />\n```\n\n## With Icons\n\n```jsx\n<VStack>\n  <InputGroup>\n    <InputLeftElement>\n      <ValidatorsIcon />\n    </InputLeftElement>\n    <Textarea />\n  </InputGroup>\n\n  <InputGroup>\n    <Textarea />\n    <InputRightElement>\n      <QrcodeIcon />\n    </InputRightElement>\n  </InputGroup>\n</VStack>\n```\n\n## Props\n\n<PropsTable\n  data={[\n    {\n      name: 'colorShceme',\n      required: false,\n      type: '\"primary\" | \"success\" | \"danger\" | \"warning\"',\n      default: '\"primary\"',\n      desc: 'The outline color of Textarea',\n    },\n    {\n      name: 'variant',\n      required: false,\n      type: 'filled',\n      default: 'filled',\n      desc: '',\n    },\n    {\n      name: 'isDisabled',\n      required: false,\n      type: 'boolean',\n      default: false,\n      desc: 'If true, the Textarea will be disabled.',\n    },\n    {\n      name: 'isInvalid',\n      required: false,\n      type: 'boolean',\n      default: false,\n      desc: 'If true, the form control will be invalid.',\n    },\n    {\n      name: 'isReadOnly',\n      required: false,\n      type: 'boolean',\n      default: false,\n      desc: 'If true, the form control will be readonly.',\n    },\n    {\n      name: 'isFullWidth',\n      required: false,\n      type: 'boolean',\n      default: false,\n      desc: 'If true, the Textarea will take up the full width of its container.',\n    },\n  ]}\n/>\n","code":"var Component=(()=>{var h=Object.create;var l=Object.defineProperty;var u=Object.getOwnPropertyDescriptor;var p=Object.getOwnPropertyNames;var m=Object.getPrototypeOf,f=Object.prototype.hasOwnProperty;var x=(a,e)=>()=>(e||a((e={exports:{}}).exports,e),e.exports),g=(a,e)=>{for(var t in e)l(a,t,{get:e[t],enumerable:!0})},s=(a,e,t,i)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let r of p(e))!f.call(a,r)&&r!==t&&l(a,r,{get:()=>e[r],enumerable:!(i=u(e,r))||i.enumerable});return a};var I=(a,e,t)=>(t=a!=null?h(m(a)):{},s(e||!a||!a.__esModule?l(t,\"default\",{value:a,enumerable:!0}):t,a)),y=a=>s(l({},\"__esModule\",{value:!0}),a);var o=x((k,d)=>{d.exports=_jsx_runtime});var v={};g(v,{default:()=>T,frontmatter:()=>b});var n=I(o()),b={title:\"Button\"};function c(a){let e=Object.assign({h1:\"h1\",h2:\"h2\",pre:\"pre\",code:\"code\",p:\"p\",h3:\"h3\"},a.components),{PropsTable:t}=e;return t||w(\"PropsTable\",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.h1,{children:\"Textarea\"}),`\n`,(0,n.jsx)(e.h2,{children:\"Import\"}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-jsx\",live:\"false\",children:`import { Textarea } from '@totejs/uikit';\n`})}),`\n`,(0,n.jsx)(e.h2,{children:\"Usage\"}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-jsx\",children:`<Textarea placeholder=\"Please enter...\" />\n`})}),`\n`,(0,n.jsx)(e.h2,{children:\"Colors\"}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-jsx\",children:`function Example() {\n  return (\n    <VStack>\n      {['primary', 'success', 'warning', 'danger'].map((item) => (\n        <Textarea colorScheme={item} placeholder={item} key={item} />\n      ))}\n    </VStack>\n  );\n}\n`})}),`\n`,(0,n.jsx)(e.h2,{children:\"Variants\"}),`\n`,(0,n.jsx)(e.p,{children:\"So far, we only have one variant, we will add more variants in the future.\"}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-jsx\",children:`<Textarea variant=\"filled\" />\n`})}),`\n`,(0,n.jsx)(e.h2,{children:\"Status\"}),`\n`,(0,n.jsx)(e.h3,{children:\"isReadOnly\"}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-jsx\",children:`<Textarea defaultValue=\"some text...\" isReadOnly />\n`})}),`\n`,(0,n.jsx)(e.h3,{children:\"isDisabled\"}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-jsx\",children:`<Textarea defaultValue=\"some text...\" isDisabled />\n`})}),`\n`,(0,n.jsx)(e.h3,{children:\"isInvalid\"}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-jsx\",children:`<Textarea defaultValue=\"some text...\" isInvalid />\n`})}),`\n`,(0,n.jsx)(e.h2,{children:\"With Icons\"}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-jsx\",children:`<VStack>\n  <InputGroup>\n    <InputLeftElement>\n      <ValidatorsIcon />\n    </InputLeftElement>\n    <Textarea />\n  </InputGroup>\n\n  <InputGroup>\n    <Textarea />\n    <InputRightElement>\n      <QrcodeIcon />\n    </InputRightElement>\n  </InputGroup>\n</VStack>\n`})}),`\n`,(0,n.jsx)(e.h2,{children:\"Props\"}),`\n`,(0,n.jsx)(t,{data:[{name:\"colorShceme\",required:!1,type:'\"primary\" | \"success\" | \"danger\" | \"warning\"',default:'\"primary\"',desc:\"The outline color of Textarea\"},{name:\"variant\",required:!1,type:\"filled\",default:\"filled\",desc:\"\"},{name:\"isDisabled\",required:!1,type:\"boolean\",default:!1,desc:\"If true, the Textarea will be disabled.\"},{name:\"isInvalid\",required:!1,type:\"boolean\",default:!1,desc:\"If true, the form control will be invalid.\"},{name:\"isReadOnly\",required:!1,type:\"boolean\",default:!1,desc:\"If true, the form control will be readonly.\"},{name:\"isFullWidth\",required:!1,type:\"boolean\",default:!1,desc:\"If true, the Textarea will take up the full width of its container.\"}]})]})}function j(a={}){let{wrapper:e}=a.components||{};return e?(0,n.jsx)(e,Object.assign({},a,{children:(0,n.jsx)(c,a)})):c(a)}var T=j;function w(a,e){throw new Error(\"Expected \"+(e?\"component\":\"object\")+\" `\"+a+\"` to be defined: you likely forgot to import, pass, or provide it.\")}return y(v);})();\n;return Component;"},"_id":"docs/components/forms/textarea.mdx","_raw":{"sourceFilePath":"docs/components/forms/textarea.mdx","sourceFileName":"textarea.mdx","sourceFileDir":"docs/components/forms","contentType":"mdx","flattenedPath":"docs/components/forms/textarea"},"type":"Doc","slug":"/docs/components/forms/textarea"}},"__N_SSG":true}