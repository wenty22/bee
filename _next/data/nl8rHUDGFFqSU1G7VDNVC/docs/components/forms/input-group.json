{"pageProps":{"doc":{"title":"InputGroup","body":{"raw":"\n# InputGroup\n\nIn some scenarios, you might need to add an icon or button inside the input component. You can use\n`InputLeftElement` and `InputRightElement` to help with this use case.\n\nIf the left or right is an icon or text, you can pass `pointerEvents=\"none\"` to `InputLeftElement`\nor `InputRightElement` to ensure that clicking on them focused the input.\n\n## Import\n\n```jsx live=false\nimport { InputGroup, InputLeftElement, InputRightElement } from '@totejs/uikit';\n```\n\n## Usage\n\n```jsx\n<InputGroup size=\"md\">\n  <InputLeftElement pointerEvents=\"none\">\n    <ValidatorsIcon size=\"md\" />\n  </InputLeftElement>\n  <Input />\n  <InputRightElement w=\"auto\">\n    <Tooltip content=\"In some scenarios, you might need to add an icon or button inside the input component. You can use `InputLeftElement` and `InputRightElement` to help with this use case.\">\n      <QrcodeIcon size=\"md\" _hover={{ color: 'scene.primary.active' }} />\n    </Tooltip>\n  </InputRightElement>\n</InputGroup>\n```\n\n## Props\n\n<PropsTable\n  data={[\n    {\n      name: 'size',\n      required: false,\n      type: 'sm | md | lg',\n      default: 'lg',\n      desc: '',\n    },\n    {\n      name: 'variant',\n      required: false,\n      type: 'filled',\n      default: 'filled',\n      desc: '',\n    },\n  ]}\n/>\n","code":"var Component=(()=>{var u=Object.create;var r=Object.defineProperty;var a=Object.getOwnPropertyDescriptor;var h=Object.getOwnPropertyNames;var m=Object.getPrototypeOf,f=Object.prototype.hasOwnProperty;var I=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports),g=(n,e)=>{for(var o in e)r(n,o,{get:e[o],enumerable:!0})},s=(n,e,o,c)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let i of h(e))!f.call(n,i)&&i!==o&&r(n,i,{get:()=>e[i],enumerable:!(c=a(e,i))||c.enumerable});return n};var E=(n,e,o)=>(o=n!=null?u(m(n)):{},s(e||!n||!n.__esModule?r(o,\"default\",{value:n,enumerable:!0}):o,n)),x=n=>s(r({},\"__esModule\",{value:!0}),n);var l=I((R,d)=>{d.exports=_jsx_runtime});var v={};g(v,{default:()=>_,frontmatter:()=>j});var t=E(l()),j={title:\"InputGroup\"};function p(n){let e=Object.assign({h1:\"h1\",p:\"p\",code:\"code\",h2:\"h2\",pre:\"pre\"},n.components),{PropsTable:o}=e;return o||b(\"PropsTable\",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h1,{children:\"InputGroup\"}),`\n`,(0,t.jsxs)(e.p,{children:[`In some scenarios, you might need to add an icon or button inside the input component. You can use\n`,(0,t.jsx)(e.code,{children:\"InputLeftElement\"}),\" and \",(0,t.jsx)(e.code,{children:\"InputRightElement\"}),\" to help with this use case.\"]}),`\n`,(0,t.jsxs)(e.p,{children:[\"If the left or right is an icon or text, you can pass \",(0,t.jsx)(e.code,{children:'pointerEvents=\"none\"'}),\" to \",(0,t.jsx)(e.code,{children:\"InputLeftElement\"}),`\nor `,(0,t.jsx)(e.code,{children:\"InputRightElement\"}),\" to ensure that clicking on them focused the input.\"]}),`\n`,(0,t.jsx)(e.h2,{children:\"Import\"}),`\n`,(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:\"language-jsx\",live:\"false\",children:`import { InputGroup, InputLeftElement, InputRightElement } from '@totejs/uikit';\n`})}),`\n`,(0,t.jsx)(e.h2,{children:\"Usage\"}),`\n`,(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:\"language-jsx\",children:`<InputGroup size=\"md\">\n  <InputLeftElement pointerEvents=\"none\">\n    <ValidatorsIcon size=\"md\" />\n  </InputLeftElement>\n  <Input />\n  <InputRightElement w=\"auto\">\n    <Tooltip content=\"In some scenarios, you might need to add an icon or button inside the input component. You can use \\`InputLeftElement\\` and \\`InputRightElement\\` to help with this use case.\">\n      <QrcodeIcon size=\"md\" _hover={{ color: 'scene.primary.active' }} />\n    </Tooltip>\n  </InputRightElement>\n</InputGroup>\n`})}),`\n`,(0,t.jsx)(e.h2,{children:\"Props\"}),`\n`,(0,t.jsx)(o,{data:[{name:\"size\",required:!1,type:\"sm | md | lg\",default:\"lg\",desc:\"\"},{name:\"variant\",required:!1,type:\"filled\",default:\"filled\",desc:\"\"}]})]})}function y(n={}){let{wrapper:e}=n.components||{};return e?(0,t.jsx)(e,Object.assign({},n,{children:(0,t.jsx)(p,n)})):p(n)}var _=y;function b(n,e){throw new Error(\"Expected \"+(e?\"component\":\"object\")+\" `\"+n+\"` to be defined: you likely forgot to import, pass, or provide it.\")}return x(v);})();\n;return Component;"},"_id":"docs/components/forms/input-group.mdx","_raw":{"sourceFilePath":"docs/components/forms/input-group.mdx","sourceFileName":"input-group.mdx","sourceFileDir":"docs/components/forms","contentType":"mdx","flattenedPath":"docs/components/forms/input-group"},"type":"Doc","slug":"/docs/components/forms/input-group"}},"__N_SSG":true}