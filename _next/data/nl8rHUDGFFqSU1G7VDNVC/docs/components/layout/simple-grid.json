{"pageProps":{"doc":{"title":"Simple Grid","body":{"raw":"\n# Simple Grid\n\n## Import\n\n```jsx live=false\nimport { SimpleGrid } from '@totejs/uikit';\n```\n\n## Usage\n\n```jsx\n<SimpleGrid columns={2} spacing={10}>\n  <Box bg=\"scene.warning.normal\" height=\"80px\"></Box>\n  <Box bg=\"scene.warning.normal\" height=\"80px\"></Box>\n  <Box bg=\"scene.warning.normal\" height=\"80px\"></Box>\n  <Box bg=\"scene.warning.normal\" height=\"80px\"></Box>\n  <Box bg=\"scene.warning.normal\" height=\"80px\"></Box>\n</SimpleGrid>\n```\n\n### Responsive columns\n\nYou can also make it responsive by passing array or object values into the columns prop.\n\n```jsx\n// Passing `columns={[2, null, 3]}` and `columns={{md: 2, lg: 3}}`\n// will have the same effect.\n\n<SimpleGrid columns={[2, null, 3]} spacing={40}>\n  <Box bg=\"scene.warning.normal\" height=\"80px\"></Box>\n  <Box bg=\"scene.warning.normal\" height=\"80px\"></Box>\n  <Box bg=\"scene.warning.normal\" height=\"80px\"></Box>\n  <Box bg=\"scene.warning.normal\" height=\"80px\"></Box>\n  <Box bg=\"scene.warning.normal\" height=\"80px\"></Box>\n</SimpleGrid>\n```\n\n### Auto-responsive grid\n\nTo make the grid responsive and adjust automatically without passing `columns`, simply pass the `minChildWidth` prop to specify the `min-width` a child should have before adjusting the layout.\n\nThis uses css grid `auto-fit` and `minmax()` internally.\n\n```jsx\n<SimpleGrid minChildWidth=\"120px\" spacing={40}>\n  <Box bg=\"scene.warning.normal\" height=\"80px\"></Box>\n  <Box bg=\"scene.warning.normal\" height=\"80px\"></Box>\n  <Box bg=\"scene.warning.normal\" height=\"80px\"></Box>\n  <Box bg=\"scene.warning.normal\" height=\"80px\"></Box>\n  <Box bg=\"scene.warning.normal\" height=\"80px\"></Box>\n  <Box bg=\"scene.warning.normal\" height=\"80px\"></Box>\n</SimpleGrid>\n```\n\n## Props\n\n<PropsTable\n  data={[\n    {\n      name: 'autoColumns',\n      required: false,\n      type: '',\n      default: '',\n      desc: 'Shorthand prop for gridAutoColumns',\n    },\n    {\n      name: 'autoFlow',\n      required: false,\n      type: '',\n      default: '',\n      desc: 'Shorthand prop for gridAutoFlow',\n    },\n    {\n      name: 'autoRows',\n      required: false,\n      type: '',\n      default: '',\n      desc: 'Shorthand prop for gridAutoRows',\n    },\n    {\n      name: 'column',\n      required: false,\n      type: '',\n      default: '',\n      desc: 'Shorthand prop for gridColumn',\n    },\n    {\n      name: 'columns',\n      required: false,\n      type: '',\n      default: '',\n      desc: 'The number of columns',\n    },\n    {\n      name: 'minChildWidth',\n      required: false,\n      type: '',\n      default: '',\n      desc: 'The width at which child elements will break into columns. Pass a number for pixel values or a string for any other valid CSS length.',\n    },\n    {\n      name: 'row',\n      required: false,\n      type: '',\n      default: '',\n      desc: 'Shorthand prop for gridRow',\n    },\n    {\n      name: 'spacing',\n      required: false,\n      type: '',\n      default: '',\n      desc: 'The gap between the grid items',\n    },\n    {\n      name: 'spacingX',\n      required: false,\n      type: '',\n      default: '',\n      desc: 'The column gap between the grid items',\n    },\n    {\n      name: 'spacingY',\n      required: false,\n      type: '',\n      default: '',\n      desc: 'The row gap between the grid items',\n    },\n    {\n      name: 'templateAreas',\n      required: false,\n      type: '',\n      default: '',\n      desc: 'Shorthand prop for gridTemplateAreas',\n    },\n    {\n      name: 'templateColumns',\n      required: false,\n      type: '',\n      default: '',\n      desc: 'Shorthand prop for gridTemplateColumns',\n    },\n    {\n      name: 'templateRows',\n      required: false,\n      type: '',\n      default: '',\n      desc: 'Shorthand prop for gridTemplateRows',\n    },\n  ]}\n/>\n","code":"var Component=(()=>{var c=Object.create;var i=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var m=Object.getOwnPropertyNames;var g=Object.getPrototypeOf,u=Object.prototype.hasOwnProperty;var x=(r,e)=>()=>(e||r((e={exports:{}}).exports,e),e.exports),f=(r,e)=>{for(var o in e)i(r,o,{get:e[o],enumerable:!0})},s=(r,e,o,t)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let a of m(e))!u.call(r,a)&&a!==o&&i(r,a,{get:()=>e[a],enumerable:!(t=p(e,a))||t.enumerable});return r};var w=(r,e,o)=>(o=r!=null?c(g(r)):{},s(e||!r||!r.__esModule?i(o,\"default\",{value:r,enumerable:!0}):o,r)),B=r=>s(i({},\"__esModule\",{value:!0}),r);var d=x((v,l)=>{l.exports=_jsx_runtime});var q={};f(q,{default:()=>S,frontmatter:()=>b});var n=w(d()),b={title:\"Simple Grid\"};function h(r){let e=Object.assign({h1:\"h1\",h2:\"h2\",pre:\"pre\",code:\"code\",h3:\"h3\",p:\"p\"},r.components),{PropsTable:o}=e;return o||j(\"PropsTable\",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.h1,{children:\"Simple Grid\"}),`\n`,(0,n.jsx)(e.h2,{children:\"Import\"}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-jsx\",live:\"false\",children:`import { SimpleGrid } from '@totejs/uikit';\n`})}),`\n`,(0,n.jsx)(e.h2,{children:\"Usage\"}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-jsx\",children:`<SimpleGrid columns={2} spacing={10}>\n  <Box bg=\"scene.warning.normal\" height=\"80px\"></Box>\n  <Box bg=\"scene.warning.normal\" height=\"80px\"></Box>\n  <Box bg=\"scene.warning.normal\" height=\"80px\"></Box>\n  <Box bg=\"scene.warning.normal\" height=\"80px\"></Box>\n  <Box bg=\"scene.warning.normal\" height=\"80px\"></Box>\n</SimpleGrid>\n`})}),`\n`,(0,n.jsx)(e.h3,{children:\"Responsive columns\"}),`\n`,(0,n.jsx)(e.p,{children:\"You can also make it responsive by passing array or object values into the columns prop.\"}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-jsx\",children:`// Passing \\`columns={[2, null, 3]}\\` and \\`columns={{md: 2, lg: 3}}\\`\n// will have the same effect.\n\n<SimpleGrid columns={[2, null, 3]} spacing={40}>\n  <Box bg=\"scene.warning.normal\" height=\"80px\"></Box>\n  <Box bg=\"scene.warning.normal\" height=\"80px\"></Box>\n  <Box bg=\"scene.warning.normal\" height=\"80px\"></Box>\n  <Box bg=\"scene.warning.normal\" height=\"80px\"></Box>\n  <Box bg=\"scene.warning.normal\" height=\"80px\"></Box>\n</SimpleGrid>\n`})}),`\n`,(0,n.jsx)(e.h3,{children:\"Auto-responsive grid\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"To make the grid responsive and adjust automatically without passing \",(0,n.jsx)(e.code,{children:\"columns\"}),\", simply pass the \",(0,n.jsx)(e.code,{children:\"minChildWidth\"}),\" prop to specify the \",(0,n.jsx)(e.code,{children:\"min-width\"}),\" a child should have before adjusting the layout.\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"This uses css grid \",(0,n.jsx)(e.code,{children:\"auto-fit\"}),\" and \",(0,n.jsx)(e.code,{children:\"minmax()\"}),\" internally.\"]}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-jsx\",children:`<SimpleGrid minChildWidth=\"120px\" spacing={40}>\n  <Box bg=\"scene.warning.normal\" height=\"80px\"></Box>\n  <Box bg=\"scene.warning.normal\" height=\"80px\"></Box>\n  <Box bg=\"scene.warning.normal\" height=\"80px\"></Box>\n  <Box bg=\"scene.warning.normal\" height=\"80px\"></Box>\n  <Box bg=\"scene.warning.normal\" height=\"80px\"></Box>\n  <Box bg=\"scene.warning.normal\" height=\"80px\"></Box>\n</SimpleGrid>\n`})}),`\n`,(0,n.jsx)(e.h2,{children:\"Props\"}),`\n`,(0,n.jsx)(o,{data:[{name:\"autoColumns\",required:!1,type:\"\",default:\"\",desc:\"Shorthand prop for gridAutoColumns\"},{name:\"autoFlow\",required:!1,type:\"\",default:\"\",desc:\"Shorthand prop for gridAutoFlow\"},{name:\"autoRows\",required:!1,type:\"\",default:\"\",desc:\"Shorthand prop for gridAutoRows\"},{name:\"column\",required:!1,type:\"\",default:\"\",desc:\"Shorthand prop for gridColumn\"},{name:\"columns\",required:!1,type:\"\",default:\"\",desc:\"The number of columns\"},{name:\"minChildWidth\",required:!1,type:\"\",default:\"\",desc:\"The width at which child elements will break into columns. Pass a number for pixel values or a string for any other valid CSS length.\"},{name:\"row\",required:!1,type:\"\",default:\"\",desc:\"Shorthand prop for gridRow\"},{name:\"spacing\",required:!1,type:\"\",default:\"\",desc:\"The gap between the grid items\"},{name:\"spacingX\",required:!1,type:\"\",default:\"\",desc:\"The column gap between the grid items\"},{name:\"spacingY\",required:!1,type:\"\",default:\"\",desc:\"The row gap between the grid items\"},{name:\"templateAreas\",required:!1,type:\"\",default:\"\",desc:\"Shorthand prop for gridTemplateAreas\"},{name:\"templateColumns\",required:!1,type:\"\",default:\"\",desc:\"Shorthand prop for gridTemplateColumns\"},{name:\"templateRows\",required:!1,type:\"\",default:\"\",desc:\"Shorthand prop for gridTemplateRows\"}]})]})}function y(r={}){let{wrapper:e}=r.components||{};return e?(0,n.jsx)(e,Object.assign({},r,{children:(0,n.jsx)(h,r)})):h(r)}var S=y;function j(r,e){throw new Error(\"Expected \"+(e?\"component\":\"object\")+\" `\"+r+\"` to be defined: you likely forgot to import, pass, or provide it.\")}return B(q);})();\n;return Component;"},"_id":"docs/components/layout/simple-grid.mdx","_raw":{"sourceFilePath":"docs/components/layout/simple-grid.mdx","sourceFileName":"simple-grid.mdx","sourceFileDir":"docs/components/layout","contentType":"mdx","flattenedPath":"docs/components/layout/simple-grid"},"type":"Doc","slug":"/docs/components/layout/simple-grid"}},"__N_SSG":true}