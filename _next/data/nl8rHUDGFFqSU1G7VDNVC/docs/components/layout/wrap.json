{"pageProps":{"doc":{"title":"Wrap","body":{"raw":"\n# Wrap\n\nWrap is a layout component that adds a defined space between its children. It wraps its children automatically if there isn't enough space to fit any more in the same row.\n\nThink of it as a smarter `flex-wrap` with `spacing` support. It works really well with things like dialog buttons, tags, and chips.\n\n## Import\n\n```jsx live=false\nimport { Wrap, WrapItem } from '@totejs/uikit';\n```\n\n- **Wrap**: Wrap composes the Box component and renders a `<ul>` tag\n- **WrapItem**: WrapItem composes the Box component and renders the HTML `<li>` tag\n\n## Usage\n\n```jsx\n<Wrap>\n  <WrapItem>\n    <Center w={240} h={80} bg=\"scene.success.normal\">\n      Box 1\n    </Center>\n  </WrapItem>\n  <WrapItem>\n    <Center w={240} h={80} bg=\"scene.danger.normal\">\n      Box 2\n    </Center>\n  </WrapItem>\n  <WrapItem>\n    <Center w={240} h={80} bg=\"scene.warning.normal\">\n      Box 3\n    </Center>\n  </WrapItem>\n  <WrapItem>\n    <Center w={240} h={80} bg=\"scene.primary.normal\">\n      Box 4\n    </Center>\n  </WrapItem>\n  <WrapItem>\n    <Center w={240} h={80} bg=\"scene.blockorus.normal\">\n      Box 5\n    </Center>\n  </WrapItem>\n</Wrap>\n```\n\n### Change the spacing\n\n```jsx\n<Wrap spacing={30}>\n  <WrapItem>\n    <Center w={240} h={80} bg=\"scene.success.normal\">\n      Box 1\n    </Center>\n  </WrapItem>\n  <WrapItem>\n    <Center w={240} h={80} bg=\"scene.danger.normal\">\n      Box 2\n    </Center>\n  </WrapItem>\n  <WrapItem>\n    <Center w={240} h={80} bg=\"scene.warning.normal\">\n      Box 3\n    </Center>\n  </WrapItem>\n  <WrapItem>\n    <Center w={240} h={80} bg=\"scene.primary.normal\">\n      Box 4\n    </Center>\n  </WrapItem>\n  <WrapItem>\n    <Center w={240} h={80} bg=\"scene.blockorus.normal\">\n      Box 5\n    </Center>\n  </WrapItem>\n</Wrap>\n```\n\n### Change the alignment\n\n```jsx\n<Wrap spacing={30} align=\"center\">\n  <WrapItem>\n    <Center w={240} h={80} bg=\"scene.success.normal\">\n      Box 1\n    </Center>\n  </WrapItem>\n  <WrapItem>\n    <Center w={240} h={40} bg=\"scene.danger.normal\">\n      Box 2\n    </Center>\n  </WrapItem>\n  <WrapItem>\n    <Center w={240} h={80} bg=\"scene.warning.normal\">\n      Box 3\n    </Center>\n  </WrapItem>\n  <WrapItem>\n    <Center w={240} h={40} bg=\"scene.primary.normal\">\n      Box 4\n    </Center>\n  </WrapItem>\n  <WrapItem>\n    <Center w={240} h={80} bg=\"scene.blockorus.normal\">\n      Box 5\n    </Center>\n  </WrapItem>\n</Wrap>\n```\n\n## Props\n\n<PropsTable\n  data={[\n    {\n      name: 'align',\n      required: false,\n      type: '',\n      default: '',\n      desc: 'The `align-items` value (for main axis alignment)',\n    },\n    {\n      name: 'direction',\n      required: false,\n      type: '',\n      default: '',\n      desc: 'The `flex-direction` value',\n    },\n    {\n      name: 'justify',\n      required: false,\n      type: '',\n      default: '',\n      desc: 'The `justify-content` value (for cross-axis alignment)',\n    },\n    {\n      name: 'shouldWrapChildren',\n      required: false,\n      type: 'boolean',\n      default: false,\n      desc: 'If true, the children will be wrapped in a WrapItem',\n    },\n    {\n      name: 'spacing',\n      required: false,\n      type: 'string | number',\n      default: '0.5rem',\n      desc: 'The space between each child (even if it wraps)',\n    },\n    {\n      name: 'spacingX',\n      required: false,\n      type: 'string | number',\n      default: '0.5rem',\n      desc: 'The horizontal space between the each child (even if it wraps). Defaults to spacing if not defined.',\n    },\n    {\n      name: 'spacingY',\n      required: false,\n      type: 'string | number',\n      default: '0.5rem',\n      desc: 'The vertical space between the each child (even if it wraps). Defaults to spacing if not defined.',\n    },\n  ]}\n/>\n","code":"var Component=(()=>{var m=Object.create;var s=Object.defineProperty;var d=Object.getOwnPropertyDescriptor;var h=Object.getOwnPropertyNames;var g=Object.getPrototypeOf,u=Object.prototype.hasOwnProperty;var f=(r,e)=>()=>(e||r((e={exports:{}}).exports,e),e.exports),W=(r,e)=>{for(var t in e)s(r,t,{get:e[t],enumerable:!0})},o=(r,e,t,i)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let a of h(e))!u.call(r,a)&&a!==t&&s(r,a,{get:()=>e[a],enumerable:!(i=d(e,a))||i.enumerable});return r};var I=(r,e,t)=>(t=r!=null?m(g(r)):{},o(e||!r||!r.__esModule?s(t,\"default\",{value:r,enumerable:!0}):t,r)),w=r=>o(s({},\"__esModule\",{value:!0}),r);var l=f((T,c)=>{c.exports=_jsx_runtime});var B={};W(B,{default:()=>b,frontmatter:()=>x});var n=I(l()),x={title:\"Wrap\"};function p(r){let e=Object.assign({h1:\"h1\",p:\"p\",code:\"code\",h2:\"h2\",pre:\"pre\",ul:\"ul\",li:\"li\",strong:\"strong\",h3:\"h3\"},r.components),{PropsTable:t}=e;return t||y(\"PropsTable\",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.h1,{children:\"Wrap\"}),`\n`,(0,n.jsx)(e.p,{children:\"Wrap is a layout component that adds a defined space between its children. It wraps its children automatically if there isn't enough space to fit any more in the same row.\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"Think of it as a smarter \",(0,n.jsx)(e.code,{children:\"flex-wrap\"}),\" with \",(0,n.jsx)(e.code,{children:\"spacing\"}),\" support. It works really well with things like dialog buttons, tags, and chips.\"]}),`\n`,(0,n.jsx)(e.h2,{children:\"Import\"}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-jsx\",live:\"false\",children:`import { Wrap, WrapItem } from '@totejs/uikit';\n`})}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"Wrap\"}),\": Wrap composes the Box component and renders a \",(0,n.jsx)(e.code,{children:\"<ul>\"}),\" tag\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"WrapItem\"}),\": WrapItem composes the Box component and renders the HTML \",(0,n.jsx)(e.code,{children:\"<li>\"}),\" tag\"]}),`\n`]}),`\n`,(0,n.jsx)(e.h2,{children:\"Usage\"}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-jsx\",children:`<Wrap>\n  <WrapItem>\n    <Center w={240} h={80} bg=\"scene.success.normal\">\n      Box 1\n    </Center>\n  </WrapItem>\n  <WrapItem>\n    <Center w={240} h={80} bg=\"scene.danger.normal\">\n      Box 2\n    </Center>\n  </WrapItem>\n  <WrapItem>\n    <Center w={240} h={80} bg=\"scene.warning.normal\">\n      Box 3\n    </Center>\n  </WrapItem>\n  <WrapItem>\n    <Center w={240} h={80} bg=\"scene.primary.normal\">\n      Box 4\n    </Center>\n  </WrapItem>\n  <WrapItem>\n    <Center w={240} h={80} bg=\"scene.blockorus.normal\">\n      Box 5\n    </Center>\n  </WrapItem>\n</Wrap>\n`})}),`\n`,(0,n.jsx)(e.h3,{children:\"Change the spacing\"}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-jsx\",children:`<Wrap spacing={30}>\n  <WrapItem>\n    <Center w={240} h={80} bg=\"scene.success.normal\">\n      Box 1\n    </Center>\n  </WrapItem>\n  <WrapItem>\n    <Center w={240} h={80} bg=\"scene.danger.normal\">\n      Box 2\n    </Center>\n  </WrapItem>\n  <WrapItem>\n    <Center w={240} h={80} bg=\"scene.warning.normal\">\n      Box 3\n    </Center>\n  </WrapItem>\n  <WrapItem>\n    <Center w={240} h={80} bg=\"scene.primary.normal\">\n      Box 4\n    </Center>\n  </WrapItem>\n  <WrapItem>\n    <Center w={240} h={80} bg=\"scene.blockorus.normal\">\n      Box 5\n    </Center>\n  </WrapItem>\n</Wrap>\n`})}),`\n`,(0,n.jsx)(e.h3,{children:\"Change the alignment\"}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-jsx\",children:`<Wrap spacing={30} align=\"center\">\n  <WrapItem>\n    <Center w={240} h={80} bg=\"scene.success.normal\">\n      Box 1\n    </Center>\n  </WrapItem>\n  <WrapItem>\n    <Center w={240} h={40} bg=\"scene.danger.normal\">\n      Box 2\n    </Center>\n  </WrapItem>\n  <WrapItem>\n    <Center w={240} h={80} bg=\"scene.warning.normal\">\n      Box 3\n    </Center>\n  </WrapItem>\n  <WrapItem>\n    <Center w={240} h={40} bg=\"scene.primary.normal\">\n      Box 4\n    </Center>\n  </WrapItem>\n  <WrapItem>\n    <Center w={240} h={80} bg=\"scene.blockorus.normal\">\n      Box 5\n    </Center>\n  </WrapItem>\n</Wrap>\n`})}),`\n`,(0,n.jsx)(e.h2,{children:\"Props\"}),`\n`,(0,n.jsx)(t,{data:[{name:\"align\",required:!1,type:\"\",default:\"\",desc:\"The `align-items` value (for main axis alignment)\"},{name:\"direction\",required:!1,type:\"\",default:\"\",desc:\"The `flex-direction` value\"},{name:\"justify\",required:!1,type:\"\",default:\"\",desc:\"The `justify-content` value (for cross-axis alignment)\"},{name:\"shouldWrapChildren\",required:!1,type:\"boolean\",default:!1,desc:\"If true, the children will be wrapped in a WrapItem\"},{name:\"spacing\",required:!1,type:\"string | number\",default:\"0.5rem\",desc:\"The space between each child (even if it wraps)\"},{name:\"spacingX\",required:!1,type:\"string | number\",default:\"0.5rem\",desc:\"The horizontal space between the each child (even if it wraps). Defaults to spacing if not defined.\"},{name:\"spacingY\",required:!1,type:\"string | number\",default:\"0.5rem\",desc:\"The vertical space between the each child (even if it wraps). Defaults to spacing if not defined.\"}]})]})}function C(r={}){let{wrapper:e}=r.components||{};return e?(0,n.jsx)(e,Object.assign({},r,{children:(0,n.jsx)(p,r)})):p(r)}var b=C;function y(r,e){throw new Error(\"Expected \"+(e?\"component\":\"object\")+\" `\"+r+\"` to be defined: you likely forgot to import, pass, or provide it.\")}return w(B);})();\n;return Component;"},"_id":"docs/components/layout/wrap.mdx","_raw":{"sourceFilePath":"docs/components/layout/wrap.mdx","sourceFileName":"wrap.mdx","sourceFileDir":"docs/components/layout","contentType":"mdx","flattenedPath":"docs/components/layout/wrap"},"type":"Doc","slug":"/docs/components/layout/wrap"}},"__N_SSG":true}