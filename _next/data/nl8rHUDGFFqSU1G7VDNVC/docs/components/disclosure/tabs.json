{"pageProps":{"doc":{"title":"Tabs","body":{"raw":"\n# Tabs\n\n## Import\n\n```jsx live=false\nimport { Tabs } from '@totejs/uikit';\n```\n\n## Usage\n\n```jsx\n<Tabs\n  defaultActiveKey=\"two\"\n  items={[\n    {\n      label: 'title 1',\n      key: 'one',\n      panel: 'panel 1',\n    },\n    {\n      label: 'title 2',\n      key: 'two',\n      panel: 'panel 2',\n    },\n    {\n      label: 'title 3',\n      key: 'three',\n      panel: 'panel 3',\n    },\n  ]}\n/>\n```\n\n## isAlive\n\nIf a tab item's `isAlive=false`, this item will be ignore. This is often used when a tab is\ndisplayed based on certain conditions.\n\n```jsx\n<Tabs\n  defaultActiveKey=\"two\"\n  items={[\n    {\n      label: 'title 1',\n      key: 'one',\n      panel: 'panel 1',\n    },\n    {\n      label: 'title 2',\n      key: 'two',\n      panel: 'panel 2',\n    },\n    {\n      label: 'title 3',\n      key: 'three',\n      panel: 'panel 3',\n      isAlive: false,\n    },\n  ]}\n/>\n```\n\n## Props\n\n<PropsTable\n  data={[\n    {\n      name: 'colorScheme',\n      required: false,\n      type: 'primary | success | warning | danger',\n      default: 'primary',\n      desc: '',\n    },\n    {\n      name: 'defaultActive',\n      required: false,\n      type: 'any',\n      default: '',\n      desc: 'The initial key of the selected tab (in uncontrolled mode)',\n    },\n    {\n      name: 'active',\n      required: false,\n      type: 'any',\n      default: '',\n      desc: 'The key of the selected tab (in controlled mode)',\n    },\n    {\n      name: 'onChange',\n      required: false,\n      type: '(key: any) => void',\n      default: '',\n      desc: 'Callback when the index (controlled or un-controlled) changes.',\n    },\n    {\n      name: 'items',\n      required: true,\n      type: 'Array<{ label: React.ReactNode; key: any;  panel: React.ReactNode, isAlive?: boolean }>',\n      desc: '',\n    },\n  ]}\n/>\n","code":"var Component=(()=>{var p=Object.create;var i=Object.defineProperty;var h=Object.getOwnPropertyDescriptor;var m=Object.getOwnPropertyNames;var u=Object.getPrototypeOf,f=Object.prototype.hasOwnProperty;var y=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports),b=(n,e)=>{for(var a in e)i(n,a,{get:e[a],enumerable:!0})},o=(n,e,a,r)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let l of m(e))!f.call(n,l)&&l!==a&&i(n,l,{get:()=>e[l],enumerable:!(r=h(e,l))||r.enumerable});return n};var g=(n,e,a)=>(a=n!=null?p(u(n)):{},o(e||!n||!n.__esModule?i(a,\"default\",{value:n,enumerable:!0}):a,n)),x=n=>o(i({},\"__esModule\",{value:!0}),n);var c=y((_,s)=>{s.exports=_jsx_runtime});var T={};b(T,{default:()=>v,frontmatter:()=>k});var t=g(c()),k={title:\"Tabs\"};function d(n){let e=Object.assign({h1:\"h1\",h2:\"h2\",pre:\"pre\",code:\"code\",p:\"p\"},n.components),{PropsTable:a}=e;return a||w(\"PropsTable\",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h1,{children:\"Tabs\"}),`\n`,(0,t.jsx)(e.h2,{children:\"Import\"}),`\n`,(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:\"language-jsx\",live:\"false\",children:`import { Tabs } from '@totejs/uikit';\n`})}),`\n`,(0,t.jsx)(e.h2,{children:\"Usage\"}),`\n`,(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:\"language-jsx\",children:`<Tabs\n  defaultActiveKey=\"two\"\n  items={[\n    {\n      label: 'title 1',\n      key: 'one',\n      panel: 'panel 1',\n    },\n    {\n      label: 'title 2',\n      key: 'two',\n      panel: 'panel 2',\n    },\n    {\n      label: 'title 3',\n      key: 'three',\n      panel: 'panel 3',\n    },\n  ]}\n/>\n`})}),`\n`,(0,t.jsx)(e.h2,{children:\"isAlive\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"If a tab item's \",(0,t.jsx)(e.code,{children:\"isAlive=false\"}),`, this item will be ignore. This is often used when a tab is\ndisplayed based on certain conditions.`]}),`\n`,(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:\"language-jsx\",children:`<Tabs\n  defaultActiveKey=\"two\"\n  items={[\n    {\n      label: 'title 1',\n      key: 'one',\n      panel: 'panel 1',\n    },\n    {\n      label: 'title 2',\n      key: 'two',\n      panel: 'panel 2',\n    },\n    {\n      label: 'title 3',\n      key: 'three',\n      panel: 'panel 3',\n      isAlive: false,\n    },\n  ]}\n/>\n`})}),`\n`,(0,t.jsx)(e.h2,{children:\"Props\"}),`\n`,(0,t.jsx)(a,{data:[{name:\"colorScheme\",required:!1,type:\"primary | success | warning | danger\",default:\"primary\",desc:\"\"},{name:\"defaultActive\",required:!1,type:\"any\",default:\"\",desc:\"The initial key of the selected tab (in uncontrolled mode)\"},{name:\"active\",required:!1,type:\"any\",default:\"\",desc:\"The key of the selected tab (in controlled mode)\"},{name:\"onChange\",required:!1,type:\"(key: any) => void\",default:\"\",desc:\"Callback when the index (controlled or un-controlled) changes.\"},{name:\"items\",required:!0,type:\"Array<{ label: React.ReactNode; key: any;  panel: React.ReactNode, isAlive?: boolean }>\",desc:\"\"}]})]})}function j(n={}){let{wrapper:e}=n.components||{};return e?(0,t.jsx)(e,Object.assign({},n,{children:(0,t.jsx)(d,n)})):d(n)}var v=j;function w(n,e){throw new Error(\"Expected \"+(e?\"component\":\"object\")+\" `\"+n+\"` to be defined: you likely forgot to import, pass, or provide it.\")}return x(T);})();\n;return Component;"},"_id":"docs/components/disclosure/tabs.mdx","_raw":{"sourceFilePath":"docs/components/disclosure/tabs.mdx","sourceFileName":"tabs.mdx","sourceFileDir":"docs/components/disclosure","contentType":"mdx","flattenedPath":"docs/components/disclosure/tabs"},"type":"Doc","slug":"/docs/components/disclosure/tabs"}},"__N_SSG":true}