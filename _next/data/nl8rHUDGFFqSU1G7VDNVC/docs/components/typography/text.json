{"pageProps":{"doc":{"title":"Text","body":{"raw":"\n# Text\n\n## Import\n\n```jsx live=false\nimport { Text } from '@totejs/uikit';\n```\n\n## Usage\n\n```jsx\n<Text>I'm a Text</Text>\n```\n\n## Sizes\n\n```jsx\n<>\n  <Text fontSize=\"60\" noOfLines={1}>\n    (60px) In love with React & Next In love with React & Next\n  </Text>\n  <Text fontSize=\"56\" noOfLines={1}>\n    (56px) In love with React & Next In love with React & Next\n  </Text>\n  <Text fontSize=\"40\" noOfLines={1}>\n    (40px) In love with React & Next In love with React & Next\n  </Text>\n  <Text fontSize=\"32\" noOfLines={1}>\n    (32px) In love with React & Next In love with React & Next\n  </Text>\n  <Text fontSize=\"24\" noOfLines={1}>\n    (24px) In love with React & Next In love with React & Next\n  </Text>\n  <Text fontSize=\"20\" noOfLines={1}>\n    (20px) In love with React & Next In love with React & Next\n  </Text>\n  <Text fontSize=\"16\" noOfLines={1}>\n    (16px) In love with React & Next In love with React & Next\n  </Text>\n  <Text fontSize=\"14\" noOfLines={1}>\n    (14px) In love with React & Next In love with React & Next\n  </Text>\n  <Text fontSize=\"12\" noOfLines={1}>\n    (12px) In love with React & Next In love with React & Next\n  </Text>\n</>\n```\n\n## Truncate\n\n### Single Line\n\n```jsx\n<Text isTruncated>\n  Basic text writing, including headings, body text, lists, and more. Basic text writing, including\n  headings, body text, lists, and more. Basic text writing, including headings, body text, lists,\n  and more. Basic text writing, including headings, body text, lists, and more. Basic text writing,\n  including headings, body text, lists, and more. Basic text writing, including headings, body text,\n  lists, and more.\n</Text>\n```\n\n### Multiline\n\n```jsx\n<Text noOfLines={2}>\n  Basic text writing, including headings, body text, lists, and more. Basic text writing, including\n  headings, body text, lists, and more. Basic text writing, including headings, body text, lists,\n  and more. Basic text writing, including headings, body text, lists, and more. Basic text writing,\n  including headings, body text, lists, and more. Basic text writing, including headings, body text,\n  lists, and more.\n</Text>\n```\n\n## Props\n\n<PropsTable\n  data={[\n    {\n      name: 'isTruncated',\n      required: false,\n      type: 'boolean',\n      default: false,\n      desc: 'For single line, render an ellipsis when the text exceeds the width of the viewport or maxWidth prop',\n    },\n    {\n      name: 'noOfLines',\n      required: false,\n      type: 'string | number',\n      default: '',\n      desc: 'For multiline, render an ellipsis when the text exceeds the width of the viewport or maxWidth prop',\n    },\n  ]}\n/>\n","code":"var Component=(()=>{var l=Object.create;var s=Object.defineProperty;var h=Object.getOwnPropertyDescriptor;var g=Object.getOwnPropertyNames;var f=Object.getPrototypeOf,m=Object.prototype.hasOwnProperty;var p=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),w=(t,e)=>{for(var i in e)s(t,i,{get:e[i],enumerable:!0})},r=(t,e,i,a)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let o of g(e))!m.call(t,o)&&o!==i&&s(t,o,{get:()=>e[o],enumerable:!(a=h(e,o))||a.enumerable});return t};var u=(t,e,i)=>(i=t!=null?l(f(t)):{},r(e||!t||!t.__esModule?s(i,\"default\",{value:t,enumerable:!0}):i,t)),T=t=>r(s({},\"__esModule\",{value:!0}),t);var d=p((j,x)=>{x.exports=_jsx_runtime});var R={};w(R,{default:()=>b,frontmatter:()=>N});var n=u(d()),N={title:\"Text\"};function c(t){let e=Object.assign({h1:\"h1\",h2:\"h2\",pre:\"pre\",code:\"code\",h3:\"h3\"},t.components),{PropsTable:i}=e;return i||I(\"PropsTable\",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.h1,{children:\"Text\"}),`\n`,(0,n.jsx)(e.h2,{children:\"Import\"}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-jsx\",live:\"false\",children:`import { Text } from '@totejs/uikit';\n`})}),`\n`,(0,n.jsx)(e.h2,{children:\"Usage\"}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-jsx\",children:`<Text>I'm a Text</Text>\n`})}),`\n`,(0,n.jsx)(e.h2,{children:\"Sizes\"}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-jsx\",children:`<>\n  <Text fontSize=\"60\" noOfLines={1}>\n    (60px) In love with React & Next In love with React & Next\n  </Text>\n  <Text fontSize=\"56\" noOfLines={1}>\n    (56px) In love with React & Next In love with React & Next\n  </Text>\n  <Text fontSize=\"40\" noOfLines={1}>\n    (40px) In love with React & Next In love with React & Next\n  </Text>\n  <Text fontSize=\"32\" noOfLines={1}>\n    (32px) In love with React & Next In love with React & Next\n  </Text>\n  <Text fontSize=\"24\" noOfLines={1}>\n    (24px) In love with React & Next In love with React & Next\n  </Text>\n  <Text fontSize=\"20\" noOfLines={1}>\n    (20px) In love with React & Next In love with React & Next\n  </Text>\n  <Text fontSize=\"16\" noOfLines={1}>\n    (16px) In love with React & Next In love with React & Next\n  </Text>\n  <Text fontSize=\"14\" noOfLines={1}>\n    (14px) In love with React & Next In love with React & Next\n  </Text>\n  <Text fontSize=\"12\" noOfLines={1}>\n    (12px) In love with React & Next In love with React & Next\n  </Text>\n</>\n`})}),`\n`,(0,n.jsx)(e.h2,{children:\"Truncate\"}),`\n`,(0,n.jsx)(e.h3,{children:\"Single Line\"}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-jsx\",children:`<Text isTruncated>\n  Basic text writing, including headings, body text, lists, and more. Basic text writing, including\n  headings, body text, lists, and more. Basic text writing, including headings, body text, lists,\n  and more. Basic text writing, including headings, body text, lists, and more. Basic text writing,\n  including headings, body text, lists, and more. Basic text writing, including headings, body text,\n  lists, and more.\n</Text>\n`})}),`\n`,(0,n.jsx)(e.h3,{children:\"Multiline\"}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-jsx\",children:`<Text noOfLines={2}>\n  Basic text writing, including headings, body text, lists, and more. Basic text writing, including\n  headings, body text, lists, and more. Basic text writing, including headings, body text, lists,\n  and more. Basic text writing, including headings, body text, lists, and more. Basic text writing,\n  including headings, body text, lists, and more. Basic text writing, including headings, body text,\n  lists, and more.\n</Text>\n`})}),`\n`,(0,n.jsx)(e.h2,{children:\"Props\"}),`\n`,(0,n.jsx)(i,{data:[{name:\"isTruncated\",required:!1,type:\"boolean\",default:!1,desc:\"For single line, render an ellipsis when the text exceeds the width of the viewport or maxWidth prop\"},{name:\"noOfLines\",required:!1,type:\"string | number\",default:\"\",desc:\"For multiline, render an ellipsis when the text exceeds the width of the viewport or maxWidth prop\"}]})]})}function v(t={}){let{wrapper:e}=t.components||{};return e?(0,n.jsx)(e,Object.assign({},t,{children:(0,n.jsx)(c,t)})):c(t)}var b=v;function I(t,e){throw new Error(\"Expected \"+(e?\"component\":\"object\")+\" `\"+t+\"` to be defined: you likely forgot to import, pass, or provide it.\")}return T(R);})();\n;return Component;"},"_id":"docs/components/typography/text.mdx","_raw":{"sourceFilePath":"docs/components/typography/text.mdx","sourceFileName":"text.mdx","sourceFileDir":"docs/components/typography","contentType":"mdx","flattenedPath":"docs/components/typography/text"},"type":"Doc","slug":"/docs/components/typography/text"}},"__N_SSG":true}