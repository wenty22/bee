{"pageProps":{"doc":{"title":"Show / Hide","body":{"raw":"\n# Show / Hide\n\nThe Show and Hide components are wrappers for other elements and components to show or hide them based on a media query.\n\n## Import\n\n```jsx live=false\nimport { Show, Hide } from '@totejs/uikit';\n```\n\n- **Show**: Show the children if the media query matches.\n- **Hide**: Hide the children if the media query matches.\n\n## Usage\n\n### Breakpoint Prop\n\nUse the `breakpoint` prop to pass in a custom query.\n\n```jsx\n<Show breakpoint=\"(max-width: 1000px)\">\n  <Box>This text appears only on screens 1000px and smaller.</Box>\n</Show>\n```\n\n### Above / Below\n\nThe above and below props receive the theme's breakpoint keys.\n\n- **above** is similar to \"min-width\"\n- **below** is similar to \"max-width\"\n\n```jsx\n<>\n  <Show above=\"md\">\n    <Box>This text appears at the \"md\" value screen width or greater.</Box>\n  </Show>\n  <Hide below=\"lg\">\n    <Box>This text hides at the \"lg\" value screen width and smaller.</Box>\n  </Hide>\n</>\n```\n\n## Props\n\n<PropsTable\n  data={[\n    {\n      name: 'above',\n      required: false,\n      type: 'string',\n      default: '',\n      desc: 'A value from the breakpoints section in the theme. Will render children from that breakpoint and above. Default breakpoint values: md, lg',\n    },\n    {\n      name: 'below',\n      required: false,\n      type: 'string',\n      default: false,\n      desc: 'A value from the breakpoints section in the theme. Will render children from that breakpoint and below. Default breakpoint values: md, lg',\n    },\n    {\n      name: 'breakpoint',\n      required: false,\n      type: 'string',\n      default: '',\n      desc: 'A custom css media query that determines when the children are rendered. Will render children if that query resolves to true.',\n    },\n  ]}\n/>\n","code":"var Component=(()=>{var c=Object.create;var o=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var m=Object.getOwnPropertyNames;var u=Object.getPrototypeOf,f=Object.prototype.hasOwnProperty;var b=(r,e)=>()=>(e||r((e={exports:{}}).exports,e),e.exports),g=(r,e)=>{for(var t in e)o(r,t,{get:e[t],enumerable:!0})},l=(r,e,t,a)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let i of m(e))!f.call(r,i)&&i!==t&&o(r,i,{get:()=>e[i],enumerable:!(a=p(e,i))||a.enumerable});return r};var w=(r,e,t)=>(t=r!=null?c(u(r)):{},l(e||!r||!r.__esModule?o(t,\"default\",{value:r,enumerable:!0}):t,r)),x=r=>l(o({},\"__esModule\",{value:!0}),r);var h=b((B,s)=>{s.exports=_jsx_runtime});var S={};g(S,{default:()=>y,frontmatter:()=>v});var n=w(h()),v={title:\"Show / Hide\"};function d(r){let e=Object.assign({h1:\"h1\",p:\"p\",h2:\"h2\",pre:\"pre\",code:\"code\",ul:\"ul\",li:\"li\",strong:\"strong\",h3:\"h3\"},r.components),{PropsTable:t}=e;return t||j(\"PropsTable\",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.h1,{children:\"Show / Hide\"}),`\n`,(0,n.jsx)(e.p,{children:\"The Show and Hide components are wrappers for other elements and components to show or hide them based on a media query.\"}),`\n`,(0,n.jsx)(e.h2,{children:\"Import\"}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-jsx\",live:\"false\",children:`import { Show, Hide } from '@totejs/uikit';\n`})}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"Show\"}),\": Show the children if the media query matches.\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"Hide\"}),\": Hide the children if the media query matches.\"]}),`\n`]}),`\n`,(0,n.jsx)(e.h2,{children:\"Usage\"}),`\n`,(0,n.jsx)(e.h3,{children:\"Breakpoint Prop\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"Use the \",(0,n.jsx)(e.code,{children:\"breakpoint\"}),\" prop to pass in a custom query.\"]}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-jsx\",children:`<Show breakpoint=\"(max-width: 1000px)\">\n  <Box>This text appears only on screens 1000px and smaller.</Box>\n</Show>\n`})}),`\n`,(0,n.jsx)(e.h3,{children:\"Above / Below\"}),`\n`,(0,n.jsx)(e.p,{children:\"The above and below props receive the theme's breakpoint keys.\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"above\"}),' is similar to \"min-width\"']}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"below\"}),' is similar to \"max-width\"']}),`\n`]}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-jsx\",children:`<>\n  <Show above=\"md\">\n    <Box>This text appears at the \"md\" value screen width or greater.</Box>\n  </Show>\n  <Hide below=\"lg\">\n    <Box>This text hides at the \"lg\" value screen width and smaller.</Box>\n  </Hide>\n</>\n`})}),`\n`,(0,n.jsx)(e.h2,{children:\"Props\"}),`\n`,(0,n.jsx)(t,{data:[{name:\"above\",required:!1,type:\"string\",default:\"\",desc:\"A value from the breakpoints section in the theme. Will render children from that breakpoint and above. Default breakpoint values: md, lg\"},{name:\"below\",required:!1,type:\"string\",default:!1,desc:\"A value from the breakpoints section in the theme. Will render children from that breakpoint and below. Default breakpoint values: md, lg\"},{name:\"breakpoint\",required:!1,type:\"string\",default:\"\",desc:\"A custom css media query that determines when the children are rendered. Will render children if that query resolves to true.\"}]})]})}function k(r={}){let{wrapper:e}=r.components||{};return e?(0,n.jsx)(e,Object.assign({},r,{children:(0,n.jsx)(d,r)})):d(r)}var y=k;function j(r,e){throw new Error(\"Expected \"+(e?\"component\":\"object\")+\" `\"+r+\"` to be defined: you likely forgot to import, pass, or provide it.\")}return x(S);})();\n;return Component;"},"_id":"docs/components/other/show-hide.mdx","_raw":{"sourceFilePath":"docs/components/other/show-hide.mdx","sourceFileName":"show-hide.mdx","sourceFileDir":"docs/components/other","contentType":"mdx","flattenedPath":"docs/components/other/show-hide"},"type":"Doc","slug":"/docs/components/other/show-hide"}},"__N_SSG":true}